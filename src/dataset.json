[{"name": "HIDE_research_article_investigation", "contents": "### Colorblind Testing\n\nThese are some directions I got from Dr. Piccolo about testing for colorblind friendliness in articles. We want to be able to verify with some kind of computer test that the responses we got from the undergraduate surveys are valid.\n\n> **Dr. Piccolo:**\n> Yeah, I think we need to specifically check for red/green color blind friendliness because that is what we asked students to check for in the survey (if I remember correctly?), rather than contrasts in general. So if there's not a way to tweak this tool to do that, we probably cannot use it. Just checking around, I saw [this article](https://www.vis4.net/blog/2018/02/automate-colorblind-checking/). I don't think they provide code for their technique, but perhaps it wouldn't be too difficult to implement it? I believe they used Javascript. I don't want to turn this into a huge effort, but maybe you and Carly can take a peek and see how difficult you think it would be.\n> [This R package](https://cran.r-project.org/web/packages/colorblindcheck/vignettes/intro-to-colorblindcheck.html) is related to the article I just sent you. There would still be some work involved, but probably would be easier than trying to implement it in Javascript. In fact, if we did this well, we might even be able to turn it into our own separate tool that people can use. I think the trick would be to see if you can extract colors from an image in R and use those as input to this R package.\n> [This](https://stackoverflow.com/questions/16163611/extract-rgb-channels-from-a-jpeg-image-in-r) might be helpful. Not sure but could be something that Carly looks into.\n\nIt'd be really nice to be able to do all this programmatically so nobody has to spend their time downloading figures from articles to run through the colorblind tool. Dr. Piccolo and I talked about using selenium, which lets you automate unit testing or scraping with a web driver, ie for pulling all the images from each article to run tests on.\n\nI also just realized that I was using selenium in python which might not be the best move if we're writing the rest of our code/tool in R! I do know there's an R plugin for selenium, my brother's used it and said it's not too difficult but idk. I know Dr. Piccolo plans on putting all of our code in a Docker file eventually that anyone can access and run to verify they get the same results as us so maybe you could try RSelenium first and then only use python if R isn't working out?\n\nI'll leave my python selenium code here though if you eventually need it.\n\n```python\nfrom selenium import webdriver  \nfrom selenium.webdriver.common.by import By  \nfrom selenium.webdriver.common.keys import Keys  \nfrom selenium.webdriver.support.ui import WebDriverWait  \nfrom selenium.webdriver.support import expected_conditions as EC  \nimport time  \n  \ndelay = 2 # number of seconds  \n  \n# I had to download something called a geckodriver and list the path to it here for selenium to interface with my browser  \n# I can't remember the specifics but I think if you google mac download geckodriver for your browser it shouldn't be hard to find  \ndriver = webdriver.Firefox(executable_path=r'/Users/zacheliason/script/geckodriver')  \n  \n# Specify website for selenium to open  \ndriver.get(\"https://www.toptal.com/designers/colorfilter/\")  \n  \n# Make sure it's on the right website  \nassert \"Toptal Color Blind Filter\" in driver.title  \n  \n# I pulled this line off stackexchange but I think it's just a way to wait for everything to load before grabbing a specific element  \n# This is selecting element by ID but I'm sure you could find one that pulls all img elements puts them in a list  \nelem = WebDriverWait(driver, delay).until(EC.presence_of_element_located((By.ID, 'orig-uri')))  \n  \n# The next few lines were for sending information to the website so if we're just pulling images off articles we shouldn't need this I don't think  \nelem.clear()  \nelem.send_keys(\"https://iiif.elifesciences.org/lax/35987%2Felife-35987-fig4-v1.tif/full/1500,/0/default.jpg\")  \nelem.send_keys(Keys.RETURN)  \n  \ntime.sleep(12)  \nimgs = driver.find_elements_by_css_selector(\"img\")  \n  \nimg = imgs[-1]  \nwith open('test_grab_colorblind.png', 'wb') as file:  \n    file.write(img.screenshot_as_png)  \n  \ndriver.close()\n```\n\nIt might be nice to save each figure that doesn't pass our colorblind test to be able to verify manually that the tool's working as we're expecting it to or checking for a type of colorblindness outside the range of red/green since that's what we asked students to look for.\n\nIf this is turning out to be too big or complicated don't hesitate to take try a different approach! These are just some thoughts I had while poking around but I haven't really tested things like you will. Thanks so much! ", "date": "2022-02-14T12:13:13.424906"}, {"name": "HIDE_datatiger_setup_dev", "contents": "## Getting Started with DataTiger\nDataTiger is the data management and processing program we use in the Labbott for all our data needs. This tutorial should help you get set up to help with data tasks in the lab such as uploading files and downloading data. If you want to set up a development version of DataTiger (i.e. you will be editing the source code, helping maintain and create new features, debugging problem files) this is the correct tutorial. **If you want to help with data but have no interest in coding, use [this tutorial](HIDE_datatiger_setup) instead (easier and takes less space on your computer).** This is all kind of a pain to get set up but it's nice to have once it's all up and running.\n\n### 1. Download [PyCharm](https://www.jetbrains.com/pycharm/download/)\n> PyCharm is an IDE used in computer programming, specifically for the Python programming language.\n\u2014 Google\n\nPyCharm is a program we use to write python code in one place. It's especially convenient because it lets you run or execute your code in the same place and offers other tools that are nice for debugging your code.\n\n![](/images/screenshots/Screen%20Shot%202022-01-26%20at%2011.40.03%20AM.png)\nClick the black button to download the free, community version. \n### 2. Install Git \n_(Skip to step 3 if you already have Git installed on your computer)_\n> Git is software for tracking changes in any set of files, usually used for coordinating work among programmers collaboratively developing source code during software development. \n> \u2014 Google\n\nWe need to set up DataTiger with Git because although it's a program we use actively in the lab, it's still under constant development and we need a way to coordinate our efforts and especially consolidate differences in code if different people change the same file. \n\n#### Mac Instructions\n1) Open terminal\n\n2) Run the following code:\n\n```console\ngit --version\n ```\nIf git isn't installed already, your computer will prompt you to install it. Sometimes this takes a second! \n\n#### Windows Instructions\n1) Download GitBash (a command line application which allows you to run bash commands on Windows) from the link [here](https://git-scm.com/download/win)\n\n![](/images/screenshots/Screen%20Shot%202022-01-26%20at%2011.40.43%20AM.png)\n2) Click the `Click here to download` link to download the most recent version\n\n### 3. Download DataTiger source code from [Github](https://github.com/Populustremuloides/DataTiger2)\nThis is the code that runs DataTiger! We host it on GitHub, from Labbott alum and DataTiger creator Brian Brown's account.\n\n1) Click the green `Code` button \n\n2) Make sure the `HTTPS` tab is selected\n\n![](/images/screenshots/Screen%20Shot%202022-01-26%20at%2011.41.03%20AM.png)\n3) Click the copy button to the right of the link to copy to your clipboard\n\n4) Open Terminal/GitBash\n\n5) Navigate to the directory/folder you want to save Data Tiger under. _(i.e., if I have a folder called 'Labbott' under Documents/Work/, I run the following code in Terminal/GitBash to enter that directory from the command line.)_\n\t\n```console\ncd Documents/Work/Labbott/\n```\n\t\n6) Run the following code to copy the git repository (a kind of cloud storage vault for coding projects) into your folder\n\n```console\ngit clone PASTE_YOUR_GIT_REPOSITORY_LINK_HERE\n```\n- Now you're done with Terminal/GitBash :)\n### 4. Download [Anaconda](https://www.anaconda.com/products/individual)\n> Anaconda is a distribution of the Python and R programming languages for scientific computing, that aims to simplify package management and deployment. The distribution includes data-science packages suitable for Windows, Linux, and macOS.\n> \u2014 Google\n\nDataTiger uses a lot of different packages or libraries of code that we usually import at the top of `.py` files. In order for python to be able to use those packages, it needs to be able to download and access them. Anaconda lets you create environments that wrap all the libraries you need into a single version of python that we'll use to run our code.\n\n1) Install and open Anaconda\n\n2) Click the `Import` button at the bottom left of the page\n\n![](/images/screenshots/Screen%20Shot%202022-01-26%20at%201.04.39%20PM.png)\n3) Name your environment whatever you want (DataTiger, dt, etc.)\n\n4) Select `PATH_TO_DATATIGER/DataTiger2/environment.yml` as the source for your environment\n\n### 5. Download [Box Drive](https://www.box.com/resources/downloads) \nAfter you install and set up Box Drive, you'll need to get edit access to the drive from a manager. This lets us control who can access/add to the database. Don't abuse these privileges by doing anything stupid (i.e. don't delete any files on Box)\n\n### 6. Configure PyCharm interpreter\nHere we're going to set up PyCharm so that it uses the conda environment or version of python we created in step 4. \n1) Open PyCharm\n2) Click **File** > **Open** and then navigate to the Data Tiger folder you just downloaded\n3) Navigate to **PyCharm** > **Preferences**\n![](/images/screenshots/Screen%20Shot%202022-01-26%20at%2011.41.51%20AM.png)\n4) Under `Python Interpreter:`, click on `Show All...`\n5) Click the `+` in the corner to add a new interpreter \n![](/images/screenshots/Screen%20Shot%202022-01-26%20at%2011.42.28%20AM.png)\n\n6) Select **Conda Environment** > **Existing environment** and then select the new Anaconda environment you created earlier\n### 7. Configure path to database\n1) Open `DatabaseName.txt` under the project tab on the left.\n2) Edit it to mirror the Path to the database `clean_datAbbase_4-15-2021.db` on your computer through Box Drive\n\nIf you have a Mac, your path will look similar to this: `/Users/zacheliason/Library/CloudStorage/Box-Box/AbbottLab/clean_datAbbase_4-15-2021.db`\n\nIf you have a PC, your path will look similar to this: `C:\\Users\\BCBrown\\Desktop\\C:\\Users\\BCBrown\\Desktop\\clean_datAbbase_try_2_again.db`\n\n### 8. Run DataTiger\n1) Open `dataTiger.py` from the project tab on the left\n2) Right click anywhere in the code on the right and click `Debug 'dataTiger'`\n![](/images/screenshots/Screen%20Shot%202022-01-26%20at%2011.42.55%20AM.png)\n\n### You're done! ", "date": "2022-02-19T13:56:35.742159"}, {"name": "HIDE_datatiger_setup", "contents": "## Getting Started with DataTiger\nDataTiger is the data management and processing program we use in the Labbott for all our data needs. This tutorial should help you get set up to help with data tasks in the lab such as uploading files and downloading data. **If you want to set up a development version of DataTiger (i.e. you will be editing the source code, helping maintain and create new features, debugging problem files)  use [this tutorial](https://zacheliason.com/#/projects/HIDE_datatiger_setup_dev) instead.** This is all kind of a pain to get set up but it's nice to have once it's all up and running.\n\n### 1. Install Git \n_(Skip to step 2 if you already have Git installed on your computer)_\n> Git is software for tracking changes in any set of files, usually used for coordinating work among programmers collaboratively developing source code during software development. \n> \u2014 Google\n\nWe need to set up DataTiger with Git because although it's a program we use actively in the lab, it's still under constant development and we need a way to coordinate our efforts and especially consolidate differences in code if multiple people change the same file. \n\n#### Mac Instructions\n1) Open terminal\n\n2) Run the following code:\n\n```console\ngit --version\n ```\nIf git isn't installed already, your computer will prompt you to install it. Sometimes this takes a second! \n\n#### Windows Instructions\n1) Download GitBash (a command line application which allows you to run bash commands on Windows) from the link [here](https://git-scm.com/download/win)\n\n![](/images/screenshots/Screen%20Shot%202022-01-26%20at%2011.40.43%20AM.png)\n2) Click the `Click here to download` link to download the most recent version\n\n### 2. Download DataTiger source code from [Github](https://github.com/Populustremuloides/DataTiger2)\nThis is the code that runs DataTiger! We host it on GitHub, from Labbott alum and DataTiger creator Brian Brown's account.\n\n1) Click the green `Code` button \n\n2) Make sure the `HTTPS` tab is selected\n\n![](/images/screenshots/Screen%20Shot%202022-01-26%20at%2011.41.03%20AM.png)\n3) Click the copy button to the right of the link to copy to your clipboard\n\n4) Open Terminal/GitBash\n\n5) Navigate to the directory/folder you want to save Data Tiger under. _(i.e., if I have a folder called 'Labbott' under Documents/Work/, I run the following code in Terminal/GitBash to enter that directory from the command line.)_\n\t\n```console\ncd Documents/Work/Labbott/\n```\n\t\n6) Run the following code to copy the git repository (a kind of cloud storage vault for coding projects) into your folder\n\n```console\ngit clone PASTE_YOUR_GIT_REPOSITORY_LINK_HERE\n```\n- Now you're done with Terminal/GitBash :)\n### 3. Download [Anaconda](https://www.anaconda.com/products/individual)\n> Anaconda is a distribution of the Python and R programming languages for scientific computing, that aims to simplify package management and deployment. The distribution includes data-science packages suitable for Windows, Linux, and macOS.\n> \u2014 Google\n\nDataTiger uses a lot of different packages or libraries of code that we usually import at the top of `.py` files. In order for python to be able to use those packages, it needs to be able to download and access them. Anaconda lets you create environments that wrap all the libraries you need into a single version of python that we'll use to run our code.\n\n1) Install and open Anaconda\n\n2) Click the `Import` button at the bottom left of the page\n\n![](/images/screenshots/Screen%20Shot%202022-01-26%20at%201.04.39%20PM.png)\n3) Name your environment whatever you want (DataTiger, dt, etc.)\n\n4) Select `PATH_TO_DATATIGER/DataTiger2/environment.yml` as the source for your environment\n\n### 4. Download [Box Drive](https://www.box.com/resources/downloads) \nAfter you install and set up Box Drive, you'll need to get edit access to the drive from a manager. This lets us control who can access/add to the database. Don't abuse these privileges by doing anything stupid (i.e. don't delete any files on Box)\n\n### 5. Configure files\n#### Update Database name\n1) Open the file `DatabaseName.txt` inside your DataTiger folder.\n2) Edit its contents to mirror the Path to the database `clean_datAbbase_4-15-2021.db` on your computer through Box Drive\n\nIf you have a Mac, your path will look similar to this: `/Users/zacheliason/Library/CloudStorage/Box-Box/AbbottLab/clean_datAbbase_4-15-2021.db`\n\nIf you have a PC, your path will look similar to this: `C:\\Users\\BCBrown\\Desktop\\C:\\Users\\BCBrown\\Desktop\\clean_datAbbase_try_2_again.db`\n\n#### Update DataTiger Path\n1) Using a text editor, open the file `dataTiger.command` if you have a Mac and `dataTiger.exe` if you have something else.\n2) Edit line 10 to say `DATATIGER_DIRECTORY = ENTER_PATH_TO_YOUR_DATATIGER_HERE`, only subbing out `ENTER_PATH_TO_YOUR_DATATIGER_HERE` with the appropriate path.\n\n### 6. Run DataTiger\n1) Double click on the file `dataTiger.command` if you have a Mac and `dataTiger.exe` if you have something else\n\n### You're done! ", "date": "2022-02-19T13:56:35.742239"}]